apiVersion: apps/v1
kind: Deployment
metadata: 
  name: goserver
  labels:
    app: goserver
spec:
  selector: 
    matchLabels:
      app: goserver
  replicas: 1
  template: 
    metadata:
      labels: 
        app: "goserver"
    spec: 
      containers: 
        - name: goserver
          image: "rodrigolucio/hello-go:v5.4.1"

          startupProbe:
            httpGet:
              path: /startup
              port: 8000 # Porta do container
            periodSeconds: 1
            failureThreshold: 30

          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000 # Porta do container
            periodSeconds: 1
            failureThreshold: 3
            initialDelaySeconds: 1 

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000 # Porta do container
            periodSeconds: 5 # Faz a verificação a cada 5 segundos do healthz
            failureThreshold: 3 # Quantas vezes tem que dar problema para ele reiniciar
            timeoutSeconds: 1 # Quanto tempo ele espera o health
            successThreshold: 1 #Quantas vezes ele testa para ter certeza que esta OK, famoso teste para garantir
            initialDelaySeconds: 15 # aguarda 15 segundos para começar a verificação

          envFrom:
            - configMapRef:
                name: goserver-env #Carrega todas as variaveis de ambiente do arquivo configmap-env.yaml, sem precisar declarar todas aqui em baixo novamente
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/go/myconfs"
              name: config

      volumes: 
        - name: config
          configMap:
            name: configmap-myconfs
            items:
            - key: my_database
              path: "myconfs.txt"